#!/bin/bash

# Removes the menus and other accessory content from the Cryptogram
# web page. All the main content is kept inside a
# <td class="contentcell">...</td>
#
# Usage: declutterize input.html outpout.html
#
function declutterize
{
	INFILE="$1"
	OUTFILE="$2"

	OLD_IFS="$IFS"
	IFS=$'\n'
	BEGIN_WRITE=''
	END_WRITE=''
	cat > "$OUTFILE" << EOF
<html>
<head>
<title>Cryptogram - $(date +'%B %Y') issue</title>
</head>
<body>
EOF
	for LINE in $(cat "$INFILE")
	do
		if [ -z "$BEGIN_WRITE" ]
		then
			BEGIN_WRITE=$(echo "$LINE" | grep '<td class="contentcell">')
		else
			if [ -z "$END_WRITE" ]
			then
				echo "$LINE" >> "$OUTFILE"
				END_WRITE=$(echo "$LINE" | grep '</td>')
			fi
		fi
	done

	cat >> "$OUTFILE" << EOF
</body></html>
EOF
}

################################################################################
##### Checks if the user has requested command line help
################################################################################

if [ "$1" == '-h' -o "$1" == '--help' ]
then
    echo
    echo "Usage: $0"
    echo
    echo 'Puts the latest issue of Cryptogram into your Calibre database'
    exit
fi

################################################################################
##### Checks for software needed to run the script
################################################################################

( which zenity > /dev/null ) || ZENITY=no
if [ "$ZENITY" == 'no' ]
then
    echo 'ERROR: you need to install Zenity to run Webpage to Calibre'
    exit
fi

(( which montage && which mogrify ) > /dev/null ) || IMAGEMAGICK=no
if [ "$IMAGEMAGICK" == 'no' ]
then
    zenity --error \
            --title='Cryptogram to Calibre' \
            --text='You need to install ImageMagick to run Cryptogram to Calibre'
    exit
fi

(( which web2disk && \
    which ebook-convert && \
    which ebook-meta && \
    which calibredb ) > /dev/null ) || CALIBRE=no
if [ "$CALIBRE" == 'no' ]
then
    zenity --error \
            --title='Cryptogram to Calibre' \
            --text='You need to install Calibre to run Cryptogram to Calibre (duh!)'
    exit
fi

################################################################################
##### Determines the URL to retrieve and the title of the webpage
################################################################################

URL='http://www.schneier.com/crypto-gram-current.html'
TITLE="Crypto-Gram - $(date +'%B %Y') issue"

################################################################################
##### Prepares the paths variables and the temporary directories
################################################################################

OLD_PWD="$(pwd)"
TMP_DIR="$HOME/.cryptogram2calibre"
HTML_DIR="$HOME/.cryptogram2calibre/html"
SCRIPT_PATH=$(cd ${0%/*} && echo $PWD/${0##*/})
SCRIPT_DIR=$(dirname "$SCRIPT_PATH")
rm -fr "$TMP_DIR"
mkdir -p "$HTML_DIR"
cd "$TMP_DIR"

( # Here starts the code tracked by zenity's progress bar

################################################################################
##### Prepares the cover image
################################################################################

montage \
    -label "${TITLE}" \
    "$SCRIPT_DIR/cryptogram-cover-template.jpg" \
    -geometry +0+0 -pointsize 24 -frame 3 \
    cover.jpg > /dev/null
mogrify -resize 590x754! cover.jpg > /dev/null
echo 25

################################################################################
##### Creates the ZIP bundle containing the HTML page
################################################################################

web2disk -d "$HTML_DIR" -r 0 --verbose "$URL" > /dev/null
declutterize "$HTML_DIR/crypto-gram-current.xhtml" "$HTML_DIR/index.html"
zip -r pippo.zip html   # I don't use HTML_DIR to not clutter the .ZIP internal paths
echo 50

################################################################################
##### Creates the alternative formats
################################################################################

# Direct conversion from HTML to EPUB or PDF gives the following error:
# ValueError: All strings must be XML compatible: Unicode or ASCII, no NULL bytes
ebook-convert pippo.zip pippo.mobi --no-inline-toc --cover=cover.jpg > /dev/null
ebook-convert pippo.mobi pippo.epub --preserve-cover-aspect-ratio --dont-split-on-page-breaks --cover=cover.jpg > /dev/null
echo 75

################################################################################
##### Adds the EPUB to Calibre with appropriate metadata
################################################################################

ebook-meta pippo.epub \
    --cover=cover.jpg \
    --title="$TITLE" \
	--authors='Bruce Schneier' \
	--author-sort='Schneier, Bruce' \
	--tags='Cryptogram, IT, Security' \
    > /dev/null

calibredb add pippo.epub > /dev/null

################################################################################
##### Adds the MOBI to Calibre
################################################################################

ebook-meta pippo.mobi \
    --cover=cover.jpg \
    --title="$TITLE" \
	--authors='Bruce Schneier' \
	--author-sort='Schneier, Bruce' \
	--tags='Cryptogram, IT, Security' \
    > /dev/null

QUERY="title:\"=$TITLE\""
ID=$(calibredb list --search "$QUERY" | grep '^[0-9]\+ ' | cut -d' ' -f 1)
calibredb add_format $ID pippo.mobi > /dev/null

echo 100

################################################################################
##### Final cleanup
################################################################################

cd "$OLD_PWD"
#rm -fr "$TMP_DIR"

) |
zenity --progress \
    --title='Cryptogram to Calibre' \
    --text="Downloadind and importing webpage '$TITLE'..." \
    --percentage=0

[ "$?" = -1 ] && \
    zenity --error --title='Cryptogram to Calibre' --text="Import canceled."

